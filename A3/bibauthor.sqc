#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "util.h"

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
    char db[6] = "cs348";
    short aid, pubid;
    char title[26], type[12], year[5];
    char name[11];
EXEC SQL END DECLARE SECTION;

int main(int argc, char * argv[]) {
    if (argc != 2) {
        printf("Usage: ./bibauthor <author-id>\n");
        exit(1);
    }

    EXEC SQL WHENEVER SQLERROR GO TO error;

    EXEC SQL CONNECT TO :db;

    aid = atoi(argv[1]);

    /* printf("%d", :aid); */

    EXEC SQL DECLARE publications CURSOR FOR
        SELECT pub.pubid, title,
        CASE
            WHEN book.year IS NOT NULL THEN 'BOOK'
            WHEN journal.year IS NOT NULL THEN 'JOURNAL'
            WHEN proceedings.year IS NOT NULL THEN 'PROCEEDINGS'
        END AS type,
        CASE
            WHEN book.year IS NOT NULL THEN book.year
            WHEN journal.year IS NOT NULL THEN journal.year
            WHEN proceedings.year IS NOT NULL THEN proceedings.year
        END AS year
        FROM publication AS pub
        FULL OUTER JOIN book ON book.pubid=pub.pubid
        FULL OUTER JOIN journal ON journal.pubid=pub.pubid
        FULL OUTER JOIN proceedings ON proceedings.pubid=pub.pubid
        WHERE book.pubid IN (
            SELECT publication
            FROM wrote
            WHERE :aid=author
        ) OR journal.pubid IN (
            SELECT appears_in
            FROM wrote, article
            WHERE :aid=author
            AND publication=article.pubid
        ) OR proceedings.pubid IN (
            SELECT appears_in
            FROM wrote, article
            WHERE :aid=author
            AND publication=article.pubid
        )
        ORDER BY year DESC, title;

    EXEC SQL OPEN publications;
    EXEC SQL WHENEVER NOT FOUND GO TO end;
    for (;;) {
        EXEC SQL FETCH publications INTO :pubid, :title, :type, :year;
        printf("%d %s %s %s\n", pubid, title, type, year);
        if ( strcmp(type, "BOOK") == 0 ) {
            printf("Pubid: %d\n", pubid);
            printf("Type: %s\n", type);
            printf("Title: %s\n", title);

            EXEC SQL DECLARE authors CURSOR FOR
                SELECT name
                FROM author, wrote
                WHERE :pubid=publication
                AND aid=author
                ORDER BY name;

            EXEC SQL OPEN authors;
            EXEC SQL WHENEVER NOT FOUND GO TO book;
            for (;;) {
                EXEC SQL FETCH authors INTO :name;
                printf("Author: %s\n", name);
            }
book:
            EXEC SQL CLOSE authors;
            printf("Publisher: \n");
            printf("Year: %s\n", year);
        } else if ( strcmp(type, "JOURNAL") == 0 || strcmp(type, "PROCEEDINGS") == 0 ) {
            printf("journal or proceedings\n");
        } else {
            // error
        }
    }

end:
    EXEC SQL CLOSE publications;

    EXEC SQL COMMIT;
    EXEC SQL CONNECT reset;
    exit(0);

error:
    check_error("My error", &sqlca);
    EXEC SQL WHENEVER SQLERROR CONTINUE;

    EXEC SQL ROLLBACK;
    EXEC SQL CONNECT reset;
    exit(1);
}
